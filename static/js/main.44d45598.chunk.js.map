{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container.js","App.js","index.js","components/Container.module.css"],"names":["ContractForm","state","name","number","handleAllInputChange","e","currentTarget","value","setState","handleS","preventDefault","handlePushContact","trim","props","onSubmit","this","className","onChange","type","pattern","title","required","placeholder","Component","ContactList","f","onDeleteContacts","map","id","onClick","Filter","filter","Container","children","s","container","App","contacts","formSubmitHandler","data","some","includes","alert","objd","uuidv4","deleteContact","contactId","prevState","contact","getVisibleContacts","normalizeFilter","toLowerCase","visibleContacts","React","reactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.44d45598.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ContactForm.scss';\n\nclass ContractForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleAllInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleS = e => {\n    e.preventDefault();\n  };\n  // функция записи новых абонентов в телефонную книгу\n  handlePushContact = e => {\n    e.preventDefault();\n    if (this.state.name.trim() === '') return;\n\n    this.props.onSubmit(this.state);\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className=\"form__container\">\n        <form onSubmit={this.handlePushContact}>\n          <label className=\"label\">\n            Name\n            <input\n              className=\"input\"\n              value={name}\n              onChange={this.handleAllInputChange}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              placeholder=\"Enter Name\"\n            />\n          </label>\n          <label className=\"label\">\n            Number\n            <input\n              className=\"input\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleAllInputChange}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              placeholder=\"Enter Number\"\n            />\n          </label>\n          <button className=\"add__button\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContractForm;\n","import React from 'react';\nimport './ContactList.scss';\n\nconst ContactList = ({ f, onDeleteContacts }) => {\n  return (\n    <ul className=\"Contact__list\">\n      {f.map(({ id, name, number }) => {\n        return (\n          <li key={id} className=\"Contact__item\">\n            {name}: {number}{' '}\n            <button\n              className=\"button__delete\"\n              type=\"button\"\n              onClick={() => onDeleteContacts(id)}\n            >\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n","const Filter = ({ filter, onChange }) => {\n  return (\n    <label className=\"label\">\n      Find contacts by name\n      <input\n        className=\"input\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Enter search name\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Container from './components/Container';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  // функция получения значения из любого инпута\n  handleAllInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  // метод добавления контакта в телефонную книгу\n  formSubmitHandler = data => {\n    // условие что контакт с таким именем есть в телефонной книге\n    if (this.state.contacts.some(e => e.name.includes(data.name))) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    // объект с именем и номером телефона для пуша в общий массив контактов\n    const objd = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n    this.setState({ contacts: [objd, ...this.state.contacts] });\n  };\n  // метод удаления контакта из телефонной книги\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  // вынес фильтр в функцию\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleAllInputChange} />\n        <ContactList\n          f={visibleContacts}\n          onDeleteContacts={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import reactDom from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nreactDom.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container___KyeQ\",\"title\":\"Container_title__1KcbD\"};"],"sourceRoot":""}