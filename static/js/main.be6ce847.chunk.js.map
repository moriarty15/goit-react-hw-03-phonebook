{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container.js","App.js","index.js","components/Container.module.css"],"names":["ContractForm","state","name","number","handleAllInputChange","e","currentTarget","value","setState","handlePushContact","preventDefault","trim","props","onSubmit","reset","this","className","onChange","type","pattern","title","required","placeholder","Component","ContactListItem","id","onDeleteContacts","onClick","ContactList","filter","map","Filter","Container","children","s","container","App","contacts","formSubmitHandler","data","some","includes","alert","objd","uuidv4","deleteContact","contactId","prevState","contact","getVisibleContacts","normalizeFilter","toLowerCase","JSON","parse","localStorage","getItem","prevProps","PrevState","setItem","stringify","visibleContacts","React","reactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.be6ce847.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\"\nimport './ContactForm.scss';\n\nclass ContractForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  handleAllInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  // функция записи новых абонентов в телефонную книгу\n  handlePushContact = e => {\n    e.preventDefault();\n    if (this.state.name.trim() === '') return;\n\n    this.props.onSubmit(this.state);\n    this.reset()\n  };\n\n  reset = () => {\n    this.setState({name: '', number: ''})\n  }\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className=\"form__container\">\n        <form onSubmit={this.handlePushContact}>\n          <label className=\"label\">\n            Name\n            <input\n              className=\"input\"\n              value={name}\n              onChange={this.handleAllInputChange}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              placeholder=\"Enter Name\"\n            />\n          </label>\n          <label className=\"label\">\n            Number\n            <input\n              className=\"input\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleAllInputChange}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              placeholder=\"Enter Number\"\n            />\n          </label>\n          <button className=\"add__button\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContractForm;\n","import PropTypes from 'prop-types'\r\n\r\nexport default function ContactListItem(props) {\r\n  const { name, number, id, onDeleteContacts } = props;\r\n  return (\r\n    <>\r\n      <span>{name}: </span>\r\n      <span>{number} </span>\r\n      <button\r\n        className=\"button__delete\"\r\n        type=\"button\"\r\n        onClick={() => onDeleteContacts(id)}\r\n      >\r\n        delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    onDeleteContacts: PropTypes.func.isRequired,\r\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactList.scss\";\nimport ContactListItem from \"./ContactListItem\";\n\nconst ContactList = ({ filter, onDeleteContacts }) => {\n  return (\n    <ul className=\"Contact__list\">\n      {filter.map(({ id, name, number }) => {\n        return (\n          <li key={id} className=\"Contact__item\">\n            <ContactListItem\n              name={name}\n              number={number}\n              id={id}\n              onDeleteContacts={onDeleteContacts}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  filter: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired,\n}","const Filter = ({ filter, onChange }) => {\n  return (\n    <label className=\"label\">\n      Find contacts by name\n      <input\n        className=\"input\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Enter search name\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Container from \"./components/Container\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, PrevState) {\n    if (this.state.contacts !== PrevState.contacts)\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n  // функция получения значения из любого инпута\n  handleAllInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  // метод добавления контакта в телефонную книгу\n  formSubmitHandler = (data) => {\n    // условие что контакт с таким именем есть в телефонной книге\n    if (this.state.contacts.some((e) => e.name.includes(data.name))) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    // объект с именем и номером телефона для пуша в общий массив контактов\n    const objd = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n    this.setState({ contacts: [objd, ...this.state.contacts] });\n  };\n  // метод удаления контакта из телефонной книги\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  // вынес фильтр в функцию\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleAllInputChange} />\n        <ContactList\n          filter={visibleContacts}\n          onDeleteContacts={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import reactDom from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nreactDom.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container___KyeQ\",\"title\":\"Container_title__1KcbD\"};"],"sourceRoot":""}